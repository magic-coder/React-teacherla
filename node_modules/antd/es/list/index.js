import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import classNames from 'classnames';
import Spin from '../spin';
import Icon from '../icon';
import Pagination from '../pagination';
import Button from '../button';
import Item from './Item';

var List = function (_Component) {
  _inherits(List, _Component);

  function List() {
    _classCallCheck(this, List);

    return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));
  }

  _createClass(List, [{
    key: 'render',
    value: function render() {
      var _classNames;

      var _props = this.props,
          _props$bordered = _props.bordered,
          bordered = _props$bordered === undefined ? true : _props$bordered,
          className = _props.className,
          children = _props.children,
          _props$loading = _props.loading,
          loading = _props$loading === undefined ? false : _props$loading,
          itemLayout = _props.itemLayout,
          _props$showLoadMore = _props.showLoadMore,
          showLoadMore = _props$showLoadMore === undefined ? false : _props$showLoadMore,
          _props$loadingMore = _props.loadingMore,
          loadingMore = _props$loadingMore === undefined ? false : _props$loadingMore,
          _props$onLoadMore = _props.onLoadMore,
          onLoadMore = _props$onLoadMore === undefined ? function () {} : _props$onLoadMore,
          _props$pagination = _props.pagination,
          pagination = _props$pagination === undefined ? false : _props$pagination,
          _props$prefixCls = _props.prefixCls,
          prefixCls = _props$prefixCls === undefined ? 'ant-list' : _props$prefixCls;

      var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-vertical', itemLayout === 'vertical'), _defineProperty(_classNames, prefixCls + '-bordered', bordered), _defineProperty(_classNames, prefixCls + '-loading', loading), _classNames));
      var moreButton = React.createElement(
        Button,
        { onClick: onLoadMore },
        React.createElement(Icon, { type: 'loading' }),
        '\u52A0\u8F7D\u4E2D...'
      );
      var moreContent = React.createElement(
        'div',
        { className: prefixCls + '-more' },
        loadingMore ? moreButton : React.createElement(
          Button,
          { onClick: onLoadMore },
          '\u52A0\u8F7D\u66F4\u591A...'
        )
      );
      var paginationContent = React.createElement(
        'div',
        { className: prefixCls + '-pagination' },
        React.createElement(Pagination, pagination)
      );
      var loadingContent = React.createElement(
        'div',
        { className: prefixCls + '-spin' },
        React.createElement(Spin, null)
      );
      return React.createElement(
        'div',
        { className: classString },
        loading && loadingContent,
        !loading && children,
        showLoadMore && moreContent,
        !showLoadMore && pagination && paginationContent
      );
    }
  }]);

  return List;
}(Component);

export default List;

List.Item = Item;