/// <reference types="react" />
import React from 'react';
export interface ListItemProps {
    className?: string;
    children?: React.ReactNode;
    prefixCls?: string;
    style?: React.CSSProperties;
    extra: React.ReactNode;
    Meta: React.ReactNode;
    Content: React.ReactNode;
    Action: React.ReactNode;
}
export interface ListItemMetaProps {
    avatar?: React.ReactNode;
    className?: string;
    children?: React.ReactNode;
    description: React.ReactNode;
    prefixCls?: string;
    style?: React.CSSProperties;
    title: React.ReactNode;
}
export interface ListItemContentProps {
    className?: string;
    children?: React.ReactNode;
    prefixCls?: string;
    style?: React.CSSProperties;
}
export interface ListItemActionProps {
    actions: any[];
    className?: string;
    children?: React.ReactNode;
    prefixCls?: string;
    style?: React.CSSProperties;
}
export declare const Meta: (props: ListItemMetaProps) => JSX.Element;
export declare const Content: (props: ListItemContentProps) => JSX.Element;
export declare const Action: (props: ListItemActionProps) => JSX.Element;
export default class Item extends React.Component<ListItemProps, any> {
    static Meta: typeof Meta;
    static Content: typeof Content;
    static Action: typeof Action;
    render(): JSX.Element;
}
